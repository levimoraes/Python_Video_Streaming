https://stackoverflow.com/questions/38765115/nginx-rtmp-module-receive-x-264-output-hls-live-stream

cd $HOME
git clone https://github.com/arut/nginx-ts-module.git
wget https://nginx.org/download/nginx-1.13.8.tar.gz
git clone https://github.com/sergey-dryabzhinsky/nginx-rtmp-module.git
sudo apt-get install build-essential libpcre3 libpcre3-dev libssl-dev
tar -xf nginx-1.13.8.tar.gz 
cd nginx-1.13.8/
sudo apt update
sudo apt install autoconf automake build-essential libpcre3 libpcre3-dev libssl-dev
./configure --with-http_ssl_module --add-module=../nginx-rtmp-module --with-http_stub_status_module --add-module=../nginx-ts-module --without-http_gzip_module

make
sudo make install


cd /usr/local/nginx/conf/ 	
sudo nano nginx.conf

worker_processes  auto;
events {
    worker_connections  1024;
}

# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4000;

        application show {
            live on;
            # Turn on HLS
            hls on;
            hls_path /mnt/hls/;
            hls_fragment 3;
            hls_playlist_length 60;
            # disable consuming the stream from nginx as rtmp
            deny play all;
    # Instruct clients to adjust resolution according to bandwidth
            hls_variant _low BANDWIDTH=512000; # Low bitrate, sub-SD resolution
            hls_variant _mid BANDWIDTH=1024000; # Medium bitrate, SD resolution
            hls_variant _hd720 BANDWIDTH=2048000; # High bitrate, HD 720p resolution
        }

    }
}

http {
    sendfile off;
    tcp_nopush on;
    #aio on;
    directio 512;
    default_type application/octet-stream;

    server {
        listen 8080;

        location / {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
        location /stats {
        stub_status;
        }


            root /mnt/;
        }
}
}





sudo /usr/local/nginx/sbin/nginx -s stop
sudo /usr/local/nginx/sbin/nginx



python -m http.server 8877
python -m SimpleHTTPServer 7788

ffmpeg -re -i ipad.mp4 -c copy -f flv rtmp:///show/stream_hd720

ffmpeg -re -f s16le -i /dev/zero -f v4l2 -thread_queue_size 512 -codec:v h264 -s 1920x1080 -i /dev/video0 -codec:v copy -acodec aac -ab 128k -g 50 -f flv rtmp:///show/stream_hd720


arecord -f cd -D plughw:2,0 | ffmpeg -thread_queue_size 512  -guess_layout_max 0  -i -  -ac 1 -itsoffset 1.0 -f video4linux2 -i /dev/video0 -map 0:a -map 1:v  -pix_fmt yuv420p -c:v libx264 -s 320x240 -preset ultrafast -tune zerolatency -f flv rtmp:///show/stream_hd720

ffmpeg -cpuflags 0 -thread_queue_size 512 -f matroska -i output.mkv -pix_fmt yuv420p -c:v libx264 -s 320x240 -b:v 10000k -preset ultrafast -tune zerolatency -f flv rtmp:///show/stream_hd720

ffmpeg -f video4linux2 -i /dev/video0 -c:v libx264 -s 720x480 -pix_fmt yuv420p -b:v 6000k  -f flv rtmp:///show/stream_hd720
https://trac.ffmpeg.org/wiki/Creating%20multiple%20outputs
ffmpeg -re -i video1.mp4 -c:v libx264 -f flv rtmp:///show/stream_hd720 -c copy  -f segment -segment_time 900 output_%03d.mp4]


sudo ffmpeg -i /dev/video0  -pix_fmt yuv420p -c:v libx264 -s 720x480 -preset ultrafast -tune zerolatency -f flv rtmp:///show/stream_hd720 -f segment -segment_time 1800 -segment_format_options movflags=+faststart out%03d.mp4



* * * * * * FINAL * * * * * * * 
sudo ffmpeg -thread_queue_size 512 -f alsa -i hw:1 -i /dev/video0   -pix_fmt yuv420p -c:v libx264 -map 0:a -map 1:v  -s 720x480 -preset ultrafast -f flv rtmp:///show/stream_hd720 -f segment -segment_time 1800 -segment_format_options movflags=+faststart /videoclipping/out%03d.mp4

sudo ffmpeg -thread_queue_size 1024 -f alsa -i hw:1 -thread_queue_size 1024 -i /dev/video0   -pix_fmt yuv420p -c:v libx264 -map 0:a -map 1:v  -s 720x480 -preset ultrafast -f flv rtmp:///show/stream_hd720 -f segment -segment_time 300 -segment_format_options movflags=+faststart /videoclipping/out%03d.mp4



